# Generated by Django 5.2.6 on 2025-10-07 07:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0005_user_can_make_payment_user_discord_username_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la formation')),
                ('description', models.TextField(verbose_name='Description')),
                ('level', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], max_length=20, verbose_name='Niveau')),
                ('platform', models.CharField(choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('teams', 'Microsoft Teams'), ('other', 'Autre')], max_length=50, verbose_name='Plateforme')),
                ('meeting_link', models.URLField(help_text='Lien Zoom ou Google Meet', verbose_name='Lien de session')),
                ('meeting_id', models.CharField(blank=True, max_length=100, verbose_name='ID de réunion')),
                ('meeting_password', models.CharField(blank=True, max_length=100, verbose_name='Mot de passe')),
                ('instructor_name', models.CharField(max_length=200, verbose_name='Nom du formateur')),
                ('instructor_bio', models.TextField(blank=True, verbose_name='Bio du formateur')),
                ('schedule_description', models.CharField(help_text='Ex: Lun-Ven, 18h-20h', max_length=200, verbose_name='Description du planning')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserFormationEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True, verbose_name='Inscrit le')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(verbose_name='Date de fin')),
                ('status', models.CharField(choices=[('upcoming', 'À venir'), ('active', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='upcoming', max_length=20)),
                ('next_session_date', models.DateTimeField(blank=True, null=True, verbose_name='Prochaine session')),
                ('total_sessions', models.IntegerField(default=0, verbose_name='Total de sessions')),
                ('attended_sessions', models.IntegerField(default=0, verbose_name='Sessions suivies')),
                ('user_notes', models.TextField(blank=True, verbose_name='Notes personnelles')),
                ('completion_certificate', models.FileField(blank=True, null=True, upload_to='certificates/', verbose_name='Certificat de complétion')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='accounts.formation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formation_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inscription Formation',
                'verbose_name_plural': 'Inscriptions Formations',
                'ordering': ['-enrolled_at'],
            },
        ),
        migrations.CreateModel(
            name='FormationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_number', models.IntegerField(verbose_name='Numéro de session')),
                ('title', models.CharField(max_length=200, verbose_name='Titre de la session')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('scheduled_date', models.DateTimeField(verbose_name='Date et heure')),
                ('duration_minutes', models.IntegerField(default=120, verbose_name='Durée (minutes)')),
                ('meeting_link', models.URLField(blank=True, verbose_name='Lien de cette session')),
                ('recording_link', models.URLField(blank=True, verbose_name="Lien d'enregistrement")),
                ('status', models.CharField(choices=[('scheduled', 'Planifiée'), ('ongoing', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='scheduled', max_length=20)),
                ('user_attended', models.BooleanField(default=False, verbose_name='Utilisateur présent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='accounts.formation')),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='accounts.userformationenrollment')),
            ],
            options={
                'verbose_name': 'Session de Formation',
                'verbose_name_plural': 'Sessions de Formation',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.AddIndex(
            model_name='userformationenrollment',
            index=models.Index(fields=['user', 'status'], name='accounts_us_user_id_d0b92c_idx'),
        ),
        migrations.AddIndex(
            model_name='userformationenrollment',
            index=models.Index(fields=['next_session_date'], name='accounts_us_next_se_a25f84_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userformationenrollment',
            unique_together={('user', 'formation', 'start_date')},
        ),
        migrations.AddIndex(
            model_name='formationsession',
            index=models.Index(fields=['scheduled_date', 'status'], name='accounts_fo_schedul_327744_idx'),
        ),
    ]
