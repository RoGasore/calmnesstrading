# Generated by Django 5.2.6 on 2025-10-07 08:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_formation_userformationenrollment_formationsession_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('account_number', models.CharField(max_length=50, verbose_name='Numéro de compte')),
                ('platform', models.CharField(choices=[('mt4', 'MetaTrader 4'), ('mt5', 'MetaTrader 5')], max_length=10, verbose_name='Plateforme')),
                ('account_type', models.CharField(choices=[('demo', 'Compte Démo'), ('real', 'Compte Réel')], max_length=10, verbose_name='Type de compte')),
                ('broker_name', models.CharField(max_length=100, verbose_name='Nom du broker')),
                ('account_name', models.CharField(max_length=100, verbose_name='Nom du compte')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Devise')),
                ('leverage', models.IntegerField(default=100, verbose_name='Effet de levier')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Solde')),
                ('equity', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Équité')),
                ('margin', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Marge')),
                ('free_margin', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Marge libre')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True, verbose_name='Dernière synchro')),
                ('ea_installed', models.BooleanField(default=False, verbose_name='EA installé')),
                ('ea_version', models.CharField(blank=True, max_length=20, verbose_name='Version EA')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Compte de Trading',
                'verbose_name_plural': 'Comptes de Trading',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'account_number', 'broker_name')},
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.CharField(max_length=50, verbose_name='Ticket MT')),
                ('magic_number', models.IntegerField(blank=True, null=True, verbose_name='Magic Number')),
                ('symbol', models.CharField(max_length=20, verbose_name='Symbole')),
                ('trade_type', models.CharField(choices=[('buy', 'BUY'), ('sell', 'SELL')], max_length=10, verbose_name='Type')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Volume (lots)')),
                ('open_price', models.DecimalField(decimal_places=5, max_digits=15, verbose_name="Prix d'ouverture")),
                ('close_price', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Prix de clôture')),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Stop Loss')),
                ('take_profit', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Take Profit')),
                ('current_price', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Prix actuel')),
                ('profit', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Profit/Perte')),
                ('swap', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Swap')),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Commission')),
                ('open_time', models.DateTimeField(verbose_name="Heure d'ouverture")),
                ('close_time', models.DateTimeField(blank=True, null=True, verbose_name='Heure de clôture')),
                ('status', models.CharField(choices=[('open', 'Ouvert'), ('closed', 'Fermé'), ('cancelled', 'Annulé')], default='open', max_length=20)),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('user_notes', models.TextField(blank=True, verbose_name='Notes personnelles')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='Tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
                ('trading_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='accounts.tradingaccount')),
            ],
            options={
                'verbose_name': 'Trade',
                'verbose_name_plural': 'Trades',
                'ordering': ['-open_time'],
                'indexes': [models.Index(fields=['user', 'status'], name='accounts_tr_user_id_a2c0ae_idx'), models.Index(fields=['open_time'], name='accounts_tr_open_ti_f1ff43_idx'), models.Index(fields=['symbol'], name='accounts_tr_symbol_aa7ae0_idx')],
                'unique_together': {('trading_account', 'ticket')},
            },
        ),
        migrations.CreateModel(
            name='TradingStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('yearly', 'Annuel'), ('all_time', 'Tout le temps')], max_length=20)),
                ('period_start', models.DateField(verbose_name='Début de période')),
                ('period_end', models.DateField(verbose_name='Fin de période')),
                ('total_trades', models.IntegerField(default=0, verbose_name='Total trades')),
                ('winning_trades', models.IntegerField(default=0, verbose_name='Trades gagnants')),
                ('losing_trades', models.IntegerField(default=0, verbose_name='Trades perdants')),
                ('total_profit', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Profit total')),
                ('total_loss', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Perte totale')),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Profit net')),
                ('win_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Win rate (%)')),
                ('profit_factor', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Profit factor')),
                ('average_win', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Gain moyen')),
                ('average_loss', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Perte moyenne')),
                ('calculated_at', models.DateTimeField(auto_now_add=True, verbose_name='Calculé le')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trading_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='accounts.tradingaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Statistiques de Trading',
                'verbose_name_plural': 'Statistiques de Trading',
                'ordering': ['-period_start'],
                'unique_together': {('user', 'trading_account', 'period_type', 'period_start')},
            },
        ),
    ]
