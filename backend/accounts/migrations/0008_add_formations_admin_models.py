# Generated by Django 5.2.6 on 2025-10-07 09:05

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0007_tradingaccount_trade_tradingstatistics'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminFormationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('scheduled_date', models.DateTimeField(help_text='Date et heure programmée')),
                ('actual_start_time', models.DateTimeField(blank=True, help_text='Heure de début réelle', null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, help_text='Heure de fin réelle', null=True)),
                ('title', models.CharField(help_text='Titre de la session', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description de la session')),
                ('objectives', models.TextField(blank=True, help_text='Objectifs de la session')),
                ('platform', models.CharField(choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('teams', 'Microsoft Teams'), ('other', 'Autre')], default='zoom', help_text='Plateforme utilisée', max_length=20)),
                ('meeting_link', models.URLField(blank=True, help_text='Lien de la réunion')),
                ('meeting_id', models.CharField(blank=True, help_text='ID de la réunion', max_length=100)),
                ('meeting_password', models.CharField(blank=True, help_text='Mot de passe de la réunion', max_length=50)),
                ('status', models.CharField(choices=[('scheduled', 'Programmée'), ('ongoing', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('postponed', 'Reportée')], default='scheduled', help_text='Statut de la session', max_length=20)),
                ('max_participants', models.PositiveIntegerField(default=50, help_text='Nombre maximum de participants')),
                ('current_participants', models.PositiveIntegerField(default=0, help_text='Nombre actuel de participants')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Créé par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_sessions', to=settings.AUTH_USER_MODEL)),
                ('formation', models.ForeignKey(help_text='Formation concernée', on_delete=django.db.models.deletion.CASCADE, related_name='admin_sessions', to='accounts.formation')),
                ('instructor', models.ForeignKey(blank=True, help_text='Formateur assigné', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session de formation (Admin)',
                'verbose_name_plural': 'Sessions de formations (Admin)',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='AdminSessionNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('session_reminder', 'Rappel de session'), ('session_starting', 'Session qui commence'), ('session_cancelled', 'Session annulée'), ('session_postponed', 'Session reportée'), ('homework_reminder', 'Rappel de devoir'), ('material_available', 'Matériel disponible')], help_text='Type de notification', max_length=30)),
                ('send_before_minutes', models.PositiveIntegerField(default=60, help_text='Envoyer X minutes avant la session')),
                ('channels', models.JSONField(default=list, help_text='Canaux de communication (email, telegram, discord, whatsapp)')),
                ('subject', models.CharField(help_text='Sujet du message', max_length=200)),
                ('message_template', models.TextField(help_text='Template du message (variables: {user_name}, {session_title}, {session_date}, {meeting_link})')),
                ('is_active', models.BooleanField(default=True, help_text='Notification active')),
                ('is_sent', models.BooleanField(default=False, help_text='Notification envoyée')),
                ('sent_at', models.DateTimeField(blank=True, help_text="Date d'envoi", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Créé par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(help_text='Session concernée', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.adminformationsession')),
            ],
            options={
                'verbose_name': 'Notification de session (Admin)',
                'verbose_name_plural': 'Notifications de sessions (Admin)',
                'ordering': ['send_before_minutes'],
            },
        ),
        migrations.CreateModel(
            name='FormationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Lundi'), (1, 'Mardi'), (2, 'Mercredi'), (3, 'Jeudi'), (4, 'Vendredi'), (5, 'Samedi'), (6, 'Dimanche')], help_text='Jour de la semaine')),
                ('start_time', models.TimeField(help_text='Heure de début (HH:MM)')),
                ('end_time', models.TimeField(help_text='Heure de fin (HH:MM)')),
                ('platform', models.CharField(choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('teams', 'Microsoft Teams'), ('other', 'Autre')], default='zoom', help_text='Plateforme utilisée', max_length=20)),
                ('meeting_link', models.URLField(blank=True, help_text='Lien de la réunion')),
                ('meeting_id', models.CharField(blank=True, help_text='ID de la réunion', max_length=100)),
                ('meeting_password', models.CharField(blank=True, help_text='Mot de passe de la réunion', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Programmation active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Créé par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_schedules', to=settings.AUTH_USER_MODEL)),
                ('formation', models.ForeignKey(help_text='Formation concernée', on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='accounts.formation')),
                ('instructor', models.ForeignKey(blank=True, help_text='Formateur assigné', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Programmation de formation',
                'verbose_name_plural': 'Programmations de formations',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('formation', 'day_of_week', 'start_time')},
            },
        ),
        migrations.AddField(
            model_name='adminformationsession',
            name='schedule',
            field=models.ForeignKey(blank=True, help_text='Programmation de base', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_sessions', to='accounts.formationschedule'),
        ),
        migrations.CreateModel(
            name='AdminSessionAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Présent'), ('absent', 'Absent'), ('late', 'En retard'), ('excused', 'Excusé')], default='absent', help_text='Statut de présence', max_length=20)),
                ('joined_at', models.DateTimeField(blank=True, help_text='Heure de connexion', null=True)),
                ('left_at', models.DateTimeField(blank=True, help_text='Heure de déconnexion', null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes sur la participation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(help_text='Session concernée', on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='accounts.adminformationsession')),
                ('user', models.ForeignKey(help_text='Utilisateur', on_delete=django.db.models.deletion.CASCADE, related_name='session_attendances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Présence à la session (Admin)',
                'verbose_name_plural': 'Présences aux sessions (Admin)',
                'unique_together': {('session', 'user')},
            },
        ),
    ]
