# Generated by Django 5.2.6 on 2025-10-07 10:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, unique=True)),
                ('unique_visitors', models.IntegerField(default=0)),
                ('total_page_views', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('returning_users', models.IntegerField(default=0)),
                ('total_sessions', models.IntegerField(default=0)),
                ('avg_session_duration', models.IntegerField(default=0)),
                ('bounce_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_conversions', models.IntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('desktop_visitors', models.IntegerField(default=0)),
                ('mobile_visitors', models.IntegerField(default=0)),
                ('tablet_visitors', models.IntegerField(default=0)),
                ('top_pages', models.JSONField(default=list)),
                ('top_countries', models.JSONField(default=list)),
                ('active_traders', models.IntegerField(default=0)),
                ('total_trades_executed', models.IntegerField(default=0)),
                ('total_profit_generated', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('avg_win_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analytics Summary',
                'verbose_name_plural': 'Analytics Summaries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TradingPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('breakeven_trades', models.IntegerField(default=0)),
                ('total_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_loss', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_pips_won', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_pips_lost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_pips', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('win_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('profit_factor', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('average_win', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('average_loss', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('risk_reward_ratio', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('trades_with_tp', models.IntegerField(default=0)),
                ('trades_with_sl', models.IntegerField(default=0)),
                ('tp_hit_count', models.IntegerField(default=0)),
                ('sl_hit_count', models.IntegerField(default=0)),
                ('tp_hit_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('max_drawdown', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_drawdown_pips', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_consecutive_wins', models.IntegerField(default=0)),
                ('max_consecutive_losses', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('current_streak_type', models.CharField(blank=True, max_length=10)),
                ('ranking_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('global_rank', models.IntegerField(blank=True, null=True)),
                ('first_trade_date', models.DateTimeField(blank=True, null=True)),
                ('last_trade_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trading_performance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trading Performance',
                'verbose_name_plural': 'Trading Performances',
                'ordering': ['-ranking_score'],
            },
        ),
        migrations.CreateModel(
            name='UserDemographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme'), ('O', 'Autre'), ('N', 'Préfère ne pas dire')], max_length=1)),
                ('age_range', models.CharField(blank=True, choices=[('18-24', '18-24 ans'), ('25-34', '25-34 ans'), ('35-44', '35-44 ans'), ('45-54', '45-54 ans'), ('55-64', '55-64 ans'), ('65+', '65 ans et plus')], max_length=10)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('trading_experience', models.CharField(blank=True, max_length=50)),
                ('years_trading', models.IntegerField(blank=True, null=True)),
                ('preferred_language', models.CharField(default='fr', max_length=10)),
                ('timezone', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='demographics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Demographics',
                'verbose_name_plural': 'User Demographics',
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(db_index=True, max_length=255)),
                ('page_url', models.CharField(max_length=500)),
                ('page_title', models.CharField(blank=True, max_length=255)),
                ('referrer', models.CharField(blank=True, max_length=500)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('country', models.CharField(blank=True, db_index=True, max_length=100)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('timezone_name', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(db_index=True, max_length=50)),
                ('browser', models.CharField(max_length=100)),
                ('browser_version', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(max_length=100)),
                ('os_version', models.CharField(blank=True, max_length=50)),
                ('screen_resolution', models.CharField(blank=True, max_length=20)),
                ('time_on_page', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Page View',
                'verbose_name_plural': 'Page Views',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['session_id', 'created_at'], name='analytics_p_session_fd2f03_idx'), models.Index(fields=['user', 'created_at'], name='analytics_p_user_id_51b4ce_idx'), models.Index(fields=['country', 'created_at'], name='analytics_p_country_f28d6f_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(default=0)),
                ('pages_viewed', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Terminée'), ('bounced', 'Rebond')], default='active', max_length=20)),
                ('converted', models.BooleanField(default=False)),
                ('conversion_type', models.CharField(blank=True, max_length=50)),
                ('conversion_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('utm_source', models.CharField(blank=True, max_length=255)),
                ('utm_medium', models.CharField(blank=True, max_length=255)),
                ('utm_campaign', models.CharField(blank=True, max_length=255)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['user', 'start_time'], name='analytics_u_user_id_4a09ce_idx'), models.Index(fields=['status', 'start_time'], name='analytics_u_status_8ed99c_idx')],
            },
        ),
    ]
