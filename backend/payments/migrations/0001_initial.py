# Generated by Django 5.2.6 on 2025-10-01 09:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('discord', 'Discord'), ('email', 'Email')], max_length=50, unique=True, verbose_name='Type de canal')),
                ('contact_info', models.CharField(max_length=255, verbose_name='Info de contact')),
                ('contact_link', models.URLField(verbose_name='Lien de contact')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('display_order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('instructions', models.TextField(blank=True, verbose_name='Instructions')),
            ],
            options={
                'verbose_name': 'Canal de contact',
                'verbose_name_plural': 'Canaux de contact',
                'ordering': ['display_order', 'channel_type'],
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'offre")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('offer_type', models.CharField(choices=[('subscription', 'Abonnement'), ('formation', 'Formation'), ('signal', 'Signal'), ('account', 'Gestion de compte')], max_length=50, verbose_name="Type d'offre")),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('duration_days', models.IntegerField(blank=True, null=True, verbose_name='Durée (jours)')),
                ('telegram_channel_id', models.CharField(blank=True, max_length=255, verbose_name='ID canal Telegram')),
                ('discord_channel_id', models.CharField(blank=True, max_length=255, verbose_name='ID canal Discord')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Offre',
                'verbose_name_plural': 'Offres',
                'ordering': ['offer_type', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('payment_method', models.CharField(choices=[('manual', 'Manuel (Service client)'), ('stripe', 'Stripe'), ('paypal', 'PayPal'), ('crypto', 'Crypto')], max_length=50, verbose_name='Méthode de paiement')),
                ('status', models.CharField(choices=[('completed', 'Complété'), ('refunded', 'Remboursé'), ('expired', 'Expiré')], default='completed', max_length=50, verbose_name='Statut')),
                ('paid_at', models.DateTimeField(auto_now_add=True, verbose_name='Payé le')),
                ('transaction_id', models.CharField(blank=True, max_length=255, verbose_name='ID de transaction')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Notes admin')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.offer', verbose_name='Offre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_completed_payments', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-paid_at'],
            },
        ),
        migrations.CreateModel(
            name='PendingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_method', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('discord', 'Discord'), ('email', 'Email')], max_length=50, verbose_name='Méthode de contact')),
                ('contact_info', models.CharField(help_text='Pseudo Telegram/Discord, numéro WhatsApp, etc.', max_length=255, verbose_name='Info de contact')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('contacted', 'Client contacté'), ('confirmed', 'Confirmé'), ('cancelled', 'Annulé')], default='pending', max_length=50, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Notes admin')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validé le')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.offer', verbose_name='Offre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pending_payments', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_payments', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Paiement en attente',
                'verbose_name_plural': 'Paiements en attente',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Créé'), ('contacted', 'Client contacté'), ('validated', 'Validé'), ('cancelled', 'Annulé'), ('refunded', 'Remboursé'), ('expired', 'Expiré')], max_length=50, verbose_name='Action')),
                ('description', models.TextField(verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history', to='payments.payment', verbose_name='Paiement')),
                ('pending_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history', to='payments.pendingpayment', verbose_name='Paiement en attente')),
            ],
            options={
                'verbose_name': 'Historique de paiement',
                'verbose_name_plural': 'Historique des paiements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='pending_payment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_payment', to='payments.pendingpayment', verbose_name='Paiement en attente'),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('expired', 'Expiré'), ('cancelled', 'Annulé')], default='active', max_length=50, verbose_name='Statut')),
                ('telegram_added', models.BooleanField(default=False, verbose_name='Ajouté sur Telegram')),
                ('discord_added', models.BooleanField(default=False, verbose_name='Ajouté sur Discord')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.offer', verbose_name='Offre')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.payment', verbose_name='Paiement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Abonnement',
                'verbose_name_plural': 'Abonnements',
                'ordering': ['-created_at'],
            },
        ),
    ]
