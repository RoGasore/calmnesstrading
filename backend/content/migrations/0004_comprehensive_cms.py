# Generated by Django 5.2.6 on 2025-10-03 07:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0003_translation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom de la catégorie')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, help_text="Nom de l'icône Lucide", max_length=50, verbose_name='Icône')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Catégorie de Page',
                'verbose_name_plural': 'Catégories de Pages',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ComprehensiveEditSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Démarrée le')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Dernière activité')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprehensive_edit_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Session d'Édition",
                'verbose_name_plural': "Sessions d'Édition",
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ContentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_key', models.CharField(help_text='Identifiant unique du bloc', max_length=100, verbose_name='Clé du bloc')),
                ('content_type', models.CharField(choices=[('text', 'Texte'), ('heading', 'Titre'), ('paragraph', 'Paragraphe'), ('image', 'Image'), ('video', 'Vidéo'), ('button', 'Bouton'), ('card', 'Carte'), ('list', 'Liste'), ('quote', 'Citation'), ('hero', 'Section Hero'), ('features', 'Fonctionnalités'), ('testimonial', 'Témoignage'), ('stats', 'Statistiques'), ('pricing', 'Tarifs'), ('faq', 'FAQ'), ('contact_form', 'Formulaire de contact'), ('social_links', 'Liens sociaux'), ('custom_html', 'HTML personnalisé')], max_length=20, verbose_name='Type de contenu')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titre')),
                ('content', models.TextField(blank=True, verbose_name='Contenu')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Données additionnelles selon le type de contenu', verbose_name='Métadonnées')),
                ('css_classes', models.CharField(blank=True, max_length=500, verbose_name='Classes CSS')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('is_editable', models.BooleanField(default=True, verbose_name='Éditable')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Bloc de Contenu',
                'verbose_name_plural': 'Blocs de Contenu',
                'ordering': ['page', 'order', 'block_key'],
            },
        ),
        migrations.CreateModel(
            name='ComprehensivePendingChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=50, verbose_name='Nom du champ')),
                ('old_value', models.TextField(blank=True, verbose_name='Ancienne valeur')),
                ('new_value', models.TextField(blank=True, verbose_name='Nouvelle valeur')),
                ('change_type', models.CharField(choices=[('update', 'Mise à jour'), ('create', 'Création'), ('delete', 'Suppression')], max_length=20, verbose_name='Type de changement')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprehensive_pending_changes', to='content.comprehensiveeditsession', verbose_name='Session')),
                ('content_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprehensive_pending_changes', to='content.contentblock', verbose_name='Bloc de contenu')),
            ],
            options={
                'verbose_name': 'Changement en Attente',
                'verbose_name_plural': 'Changements en Attente',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500, verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Réponse')),
                ('category', models.CharField(choices=[('general', 'Général'), ('trading', 'Trading'), ('formations', 'Formations'), ('signaux', 'Signaux'), ('comptes', 'Gestion de comptes'), ('paiements', 'Paiements'), ('technique', 'Technique')], default='general', max_length=20, verbose_name='Catégorie')),
                ('keywords', models.CharField(blank=True, help_text='Mots-clés pour la recherche', max_length=500, verbose_name='Mots-clés')),
                ('search_tags', models.JSONField(blank=True, default=list, verbose_name='Tags de recherche')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('archived', 'Archivé')], default='draft', max_length=20, verbose_name='Statut')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mise en avant')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'order', '-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='CALMNESS FI', max_length=200, verbose_name='Nom du site')),
                ('site_tagline', models.CharField(blank=True, max_length=300, verbose_name='Slogan du site')),
                ('site_description', models.TextField(blank=True, verbose_name='Description du site')),
                ('email_contact', models.EmailField(blank=True, max_length=254, verbose_name='Email de contact')),
                ('phone_contact', models.CharField(blank=True, max_length=20, verbose_name='Téléphone de contact')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('social_networks', models.JSONField(default=dict, help_text="Format: {'facebook': 'url', 'twitter': 'url', 'instagram': 'url'}", verbose_name='Réseaux sociaux')),
                ('copyright_text', models.CharField(default='© 2024 CALMNESS FI. Tous droits réservés.', max_length=500, verbose_name='Texte de copyright')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Paramètres Globaux',
                'verbose_name_plural': 'Paramètres Globaux',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'offre")),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.CharField(max_length=300, verbose_name='Description courte')),
                ('offer_type', models.CharField(choices=[('formation', 'Formation'), ('signal', 'Signal'), ('gestion', 'Gestion de compte'), ('coaching', 'Coaching'), ('service', 'Service')], max_length=20, verbose_name="Type d'offre")),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Prix')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('is_free', models.BooleanField(default=False, verbose_name='Gratuit')),
                ('discount_percentage', models.PositiveIntegerField(default=0, verbose_name='Remise (%)')),
                ('features', models.JSONField(default=list, help_text='Liste des fonctionnalités', verbose_name='Fonctionnalités')),
                ('benefits', models.JSONField(default=list, help_text='Liste des avantages', verbose_name='Avantages')),
                ('requirements', models.JSONField(default=list, help_text='Prérequis nécessaires', verbose_name='Prérequis')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('archived', 'Archivé')], default='draft', max_length=20, verbose_name='Statut')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mise en avant')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Populaire')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('image_url', models.URLField(blank=True, verbose_name="URL de l'image")),
                ('icon', models.CharField(blank=True, help_text="Nom de l'icône Lucide", max_length=50, verbose_name='Icône')),
                ('color_theme', models.CharField(default='primary', max_length=20, verbose_name='Thème de couleur')),
                ('meta_title', models.CharField(blank=True, max_length=200, verbose_name='Meta titre')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Offre',
                'verbose_name_plural': 'Offres',
                'ordering': ['order', '-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SitePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom de la page')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=200, verbose_name='Titre de la page')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('meta_title', models.CharField(blank=True, max_length=200, verbose_name='Meta titre')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta description')),
                ('meta_keywords', models.CharField(blank=True, max_length=500, verbose_name='Meta mots-clés')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_public', models.BooleanField(default=True, verbose_name='Publique')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.pagecategory', verbose_name='Catégorie')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Page du Site',
                'verbose_name_plural': 'Pages du Site',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='contentblock',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_blocks', to='content.sitepage', verbose_name='Page'),
        ),
        migrations.AddField(
            model_name='comprehensiveeditsession',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprehensive_edit_sessions', to='content.sitepage', verbose_name='Page'),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100, verbose_name='Nom du client')),
                ('client_initials', models.CharField(blank=True, max_length=10, verbose_name='Initiales')),
                ('client_role', models.CharField(blank=True, max_length=100, verbose_name='Rôle/Fonction')),
                ('client_avatar', models.URLField(blank=True, verbose_name="URL de l'avatar")),
                ('testimonial_text', models.TextField(verbose_name='Texte du témoignage')),
                ('rating', models.PositiveIntegerField(default=5, help_text='Note sur 5 étoiles', verbose_name='Note')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('archived', 'Archivé')], default='draft', max_length=20, verbose_name='Statut')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mise en avant')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Témoignage',
                'verbose_name_plural': 'Témoignages',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComprehensiveContentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titre')),
                ('content', models.TextField(blank=True, verbose_name='Contenu')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées')),
                ('version_number', models.PositiveIntegerField(verbose_name='Numéro de version')),
                ('change_summary', models.CharField(blank=True, max_length=500, verbose_name='Résumé des changements')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('content_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprehensive_versions', to='content.contentblock', verbose_name='Bloc de contenu')),
            ],
            options={
                'verbose_name': 'Version de Contenu',
                'verbose_name_plural': 'Versions de Contenu',
                'ordering': ['-created_at'],
                'unique_together': {('content_block', 'version_number')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='contentblock',
            unique_together={('page', 'block_key')},
        ),
    ]
