#!/bin/bash

echo "üöÄ D√©marrage du syst√®me Telegram Calmness Trading..."

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# V√©rifier les variables d'environnement
echo -e "${YELLOW}üìã V√©rification de la configuration...${NC}"

if [ -z "$TELEGRAM_BOT_TOKEN" ]; then
    echo -e "${RED}‚ùå TELEGRAM_BOT_TOKEN non d√©fini${NC}"
    exit 1
fi

if [ -z "$UPSTASH_REDIS_REST_URL" ]; then
    echo -e "${RED}‚ùå UPSTASH_REDIS_REST_URL non d√©fini${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Configuration OK${NC}"

# Fonction pour arr√™ter proprement les processus
cleanup() {
    echo -e "\n${YELLOW}üõë Arr√™t du syst√®me...${NC}"
    kill $CELERY_WORKER_PID $CELERY_BEAT_PID $BOT_PID 2>/dev/null
    echo -e "${GREEN}‚úÖ Syst√®me arr√™t√©${NC}"
    exit 0
}

trap cleanup SIGINT SIGTERM

# D√©marrer Celery Worker
echo -e "${YELLOW}üîß D√©marrage de Celery Worker...${NC}"
celery -A backend worker -l info --concurrency=2 &
CELERY_WORKER_PID=$!
echo -e "${GREEN}‚úÖ Celery Worker d√©marr√© (PID: $CELERY_WORKER_PID)${NC}"

# Attendre un peu
sleep 2

# D√©marrer Celery Beat
echo -e "${YELLOW}‚è∞ D√©marrage de Celery Beat...${NC}"
celery -A backend beat -l info &
CELERY_BEAT_PID=$!
echo -e "${GREEN}‚úÖ Celery Beat d√©marr√© (PID: $CELERY_BEAT_PID)${NC}"

# Attendre un peu
sleep 2

# D√©marrer le Bot Telegram
echo -e "${YELLOW}ü§ñ D√©marrage du Bot Telegram...${NC}"
python telegram_bot/bot.py &
BOT_PID=$!
echo -e "${GREEN}‚úÖ Bot Telegram d√©marr√© (PID: $BOT_PID)${NC}"

echo -e "\n${GREEN}üéâ Syst√®me Telegram d√©marr√© avec succ√®s!${NC}"
echo -e "${YELLOW}üìä Processus en cours:${NC}"
echo -e "   ‚Ä¢ Celery Worker: PID $CELERY_WORKER_PID"
echo -e "   ‚Ä¢ Celery Beat: PID $CELERY_BEAT_PID"
echo -e "   ‚Ä¢ Bot Telegram: PID $BOT_PID"
echo -e "\n${YELLOW}üí° Appuyez sur Ctrl+C pour arr√™ter le syst√®me${NC}\n"

# Attendre que les processus se terminent
wait

